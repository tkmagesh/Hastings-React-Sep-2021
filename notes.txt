1. Better client-side infrastructure
2. Powerful browsers
    1. Http client
    2. Render HTML document

    Virutal OS (HTML5)
        1. Data Storage
            LocalStorage
            SessionStorage
            IndexedDB

        2. File System
            API

        3. Multithreading capabilities
            WebWorker

        4. Offline application access
            Service Worker

        5. Networking
            Server Sent Events
            WebSocket
            WebRTC

In JSX
    Every open tag must have a corresponding closing tag
    Use 'htmlFor' in place of 'for'
    Use 'className' in place of 'class'

React Component
    Encapusation of Presentation + UI Behavior + State


ES5
    Data Types
        number, string, boolean, object, undefined
    Programming constructs
        var, function, if, for, while, do-while, switch, break, continue, return, throw, try, catch, finally
    APIs
        Math, RegEx, Array, Date, Error, setTimeout, clearTimeout, setInterval, clearInterval

Replacing JavaScript
    Dart

Highlevel language that compiles to JavaScript
    CoffeeScript
    TypeScript
    Script#
    Clojure

Improvement over JS
    ES6 (ECMAScript6 / ES2015 / ESNext)

ES6 Features

    1. let
    2. const
    3. Array destructuring
    4. Rest operator (array)
    5. Spread operator (array)
    6. Object destructuring
    7. Rest operator (Object)
    8. Spread operator (Object)
    9. Default Parameters
    10. Arrow functions
    11. parameter destructuring
    12. Template Literals
    13. Iterators (for..of)
    14. Classes

    http://es6-features.org/



Array Methods:
    1. forEach
    2. filter
    3. map
    4. reduce

Day-2 Agenda
    Dynamic display of components (done)
    Create a list of components (done)
    Assignment : SalaryCalculator using React (done)
    Component Composition (done)
    Functional Components
    Hooks
    Product Management Use Case (to understand the need for state manager)


React Hooks
    Functions created to handle side effects in functional components
    Hook function names must start with 'use'
    Builtin Hooks
        useState
        useEffect
        useMemo
        useCallback
        useReducer
        useRef

State
    UI State
        assists the presentational needs of the component
        
        Changes in this state is not required to be implicitly recognized by other parts of the application
        
        It is highly unlikely that this state is needed in other parts of the application

        It is perfectly ok to maintain this in the component state

    App State
        Data that is used in the core business logic of the application

        It is highly likely that this data is needed in other parts of the application

        Changes in this state MUST be implicitly recognized by other parts of the application

        DONOT maintain this in the component state

Flex
    Architectural guideline

Function Invocation patterns
    When a function is invoked    
        1. as a method of an obj
                this -> obj
        2. as a function
                this -> global scope (window)


create-react-app

sudo npm install yarn -g

yarn create react-app app-name

ES6
    Everything defined in a JS file is considered 'private' to that file
    The public entities have to be explicitly 'exported'
    public entities from other files have to be explicitly 'imported' to use them.

src
    /bugs
        /actions
            addNew.js
            toggle.js
            .
            .
            index.js

        /reducers
            bugsReducer.js

        /components
            bug-stats.jsx
            bug-list.jsx
            bug-edit.jsx
            bug-sort.jsx
            bug-item.jsx

        index.js (BugTracker)

    /store
        index.js

    
Container Components / Smart Components
    Interface with the outside world (redux)
    Pass on the data and action dispatchers to the presentation components
    ex, BugTrackerComponent, ProjectsComponent

Presentation Components / Dumb Components
    Dont interface with outside world (redux)
    Present the data received from the container component
    ex: BugStats, BugSort, BugEdit, BugList, BugItem etc


react-redux
    connect()
        facilitate the storeState & dispatch to us

    Provider
        facilitates the storeState & dispatch to the connected components


Redux dev tools
    https://github.com/zalmoxisus/redux-devtools-extension
Chrome extension
    https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd